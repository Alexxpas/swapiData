{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\passa\\\\Desktop\\\\dev\\\\projects\\\\sun-battles\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport './Components/Cards/Cards.css';\nimport MovieCards from './Components/MovieCards/MovieCards';\nimport SearchTerm from './Components/Features/SearchTerm/SearchTerm';\nimport './App.css'; // import { Cards } from './Components/Cards/Cards';\n// import Films from './swapiDataFetch';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = props;\n  const [Data, setData] = useState({\n    Titles: [],\n    Loaded: false\n  }); // const [searchValue, setSearchValue] = useState('');\n\n  const visibleAllFilms = getFilteredFilms(Data.Titles, state.searchTerm); // const visibleFavoriteRecipes = getFilteredFilms(state.favoriteRecipes, state.searchTerm);\n\n  useEffect(() => {\n    axios.get('https://www.swapi.tech/api/films/').then(res => {\n      let swapiData = res.data.result;\n      setData({\n        Titles: swapiData.map(x => {\n          return x.properties.title;\n        }),\n        Loaded: true\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My favourites:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorites card-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"//RENDER FAVOURITE CARDS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Movie List:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchTerm, {\n          searchTerm: state.searchTerm // setSearchValue={setSearchValue} \n          ,\n          dispatch: dispatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Swapi Movies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filmsArray card-container\",\n          children: /*#__PURE__*/_jsxDEV(MovieCards // movies={Data.Titles}\n          // loaded={Data.Loaded} \n          , {\n            allFilms: visibleAllFilms,\n            dispatch: dispatch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n/* Utility Helpers */\n\n\n_s(App, \"TajPScZXpy9nGzlRxlR1CiL6+gM=\");\n\n_c = App;\n\nfunction getFilteredFilms(recipes, searchTerm) {\n  return recipes.filter(recipe => recipe.name.toLowerCase().includes(searchTerm.toLowerCase()));\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/passa/Desktop/dev/projects/sun-battles/src/App.js"],"names":["React","useEffect","useState","axios","MovieCards","SearchTerm","App","props","state","dispatch","Data","setData","Titles","Loaded","visibleAllFilms","getFilteredFilms","searchTerm","get","then","res","swapiData","data","result","map","x","properties","title","catch","err","console","log","recipes","filter","recipe","name","toLowerCase","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,8BAAP;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,UAAP,MAAuB,6CAAvB;AAEA,OAAO,WAAP,C,CACA;AACA;;;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAElB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBF,KAA5B;AAEA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAC/BU,IAAAA,MAAM,EAAE,EADuB;AAE/BC,IAAAA,MAAM,EAAE;AAFuB,GAAD,CAAhC,CAJkB,CASlB;;AAEA,QAAMC,eAAe,GAAGC,gBAAgB,CAACL,IAAI,CAACE,MAAN,EAAcJ,KAAK,CAACQ,UAApB,CAAxC,CAXkB,CAYlB;;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACc,GAAN,CAAU,mCAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACX,UAAIC,SAAS,GAAGD,GAAG,CAACE,IAAJ,CAASC,MAAzB;AAEAX,MAAAA,OAAO,CAAC;AACNC,QAAAA,MAAM,EAAEQ,SAAS,CAACG,GAAV,CAAeC,CAAD,IAAO;AAC3B,iBAAOA,CAAC,CAACC,UAAF,CAAaC,KAApB;AACD,SAFO,CADF;AAINb,QAAAA,MAAM,EAAE;AAJF,OAAD,CAAP;AAQD,KAZH,EAaGc,KAbH,CAaSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAfH;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAEE;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAOE,QAAC,UAAD;AACE,UAAA,UAAU,EAAEpB,KAAK,CAACQ,UADpB,CAEE;AAFF;AAGE,UAAA,QAAQ,EAAEP;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAPF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,iCAEE,QAAC,UAAD,CACE;AACA;AAFF;AAGE,YAAA,QAAQ,EAAEK,eAHZ;AAIE,YAAA,QAAQ,EAAEL;AAJZ;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;AAED;;;GAjESH,G;;KAAAA,G;;AAmET,SAASS,gBAAT,CAA0BgB,OAA1B,EAAmCf,UAAnC,EAA+C;AAC7C,SAAOe,OAAO,CAACC,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCpB,UAAU,CAACmB,WAAX,EAAnC,CAAzB,CAAP;AACD;;AAED,eAAe7B,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\n\nimport './Components/Cards/Cards.css';\nimport MovieCards from './Components/MovieCards/MovieCards';\nimport SearchTerm from './Components/Features/SearchTerm/SearchTerm';\n\nimport './App.css';\n// import { Cards } from './Components/Cards/Cards';\n// import Films from './swapiDataFetch';\n\n\nfunction App(props) {\n\n  const { state, dispatch } = props;\n\n  const [Data, setData] = useState({\n    Titles: [],\n    Loaded: false\n  })\n\n  // const [searchValue, setSearchValue] = useState('');\n\n  const visibleAllFilms = getFilteredFilms(Data.Titles, state.searchTerm);\n  // const visibleFavoriteRecipes = getFilteredFilms(state.favoriteRecipes, state.searchTerm);\n\n  useEffect(() => {\n    axios.get('https://www.swapi.tech/api/films/')\n      .then(res => {\n        let swapiData = res.data.result;\n\n        setData({\n          Titles: swapiData.map((x) => {\n            return x.properties.title\n          }),\n          Loaded: true\n        }\n        )\n\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }, [])\n\n  return (\n    <div className=\"App\">\n\n      <main>\n        <section>\n          <h2>My favourites:</h2>\n          <div className=\"favorites card-container\">\n            <p>//RENDER FAVOURITE CARDS</p>\n          </div>\n          <h2>Search Movie List:</h2>\n          {/* SEARCH TERM TO PASS DATA TO COMPONENT */}\n          <SearchTerm\n            searchTerm={state.searchTerm}\n            // setSearchValue={setSearchValue} \n            dispatch={dispatch}\n          />\n          <h2>Swapi Movies:</h2>\n          <div className='filmsArray card-container'>\n            {/* MOVIE ARRAY TO PASS DATA TO COMPONENT */}\n            <MovieCards\n              // movies={Data.Titles}\n              // loaded={Data.Loaded} \n              allFilms={visibleAllFilms}\n              dispatch={dispatch}\n            />\n          </div>\n        </section>\n      </main >\n    </div >\n  );\n}\n\n/* Utility Helpers */\n\nfunction getFilteredFilms(recipes, searchTerm) {\n  return recipes.filter(recipe => recipe.name.toLowerCase().includes(searchTerm.toLowerCase()));\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}