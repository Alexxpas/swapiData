{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\passa\\\\Desktop\\\\dev\\\\projects\\\\sun-battles\\\\src\\\\swapiDataFetch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport lightsabersLit from './media/lightsabers-lit.png';\nimport './Components/Cards/Cards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Films = () => {\n  _s();\n\n  const [Data, setData] = useState({\n    Titles: [],\n    Loaded: false\n  });\n  useEffect(() => {\n    axios.get('https://www.swapi.tech/api/films/').then(res => {\n      let swapiData = res.data.result;\n      setData({\n        // Films: swapiData.forEach(element => { console.log(element.properties.title) }) \n        //REFACTOR*****************************\n        Titles: [swapiData[0].properties.title, swapiData[1].properties.title, swapiData[2].properties.title, swapiData[3].properties.title, swapiData[4].properties.title, swapiData[5].properties.title],\n        Loaded: true\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: Data.Loaded === true ? Data.Titles.map((title, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: lightsabersLit,\n            className: \"lightsabersLit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading your movies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Films, \"H/avngrI7fujzZoDrmq8NvezHIk=\");\n\n_c = Films;\nexport default Films;\n\nvar _c;\n\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"sources":["C:/Users/passa/Desktop/dev/projects/sun-battles/src/swapiDataFetch.js"],"names":["React","useEffect","useState","axios","lightsabersLit","Films","Data","setData","Titles","Loaded","get","then","res","swapiData","data","result","properties","title","catch","err","console","log","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAO,8BAAP;;;AAKA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;AAC7BM,IAAAA,MAAM,EAAE,EADqB;AAE7BC,IAAAA,MAAM,EAAE;AAFqB,GAAD,CAAhC;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACO,GAAN,CAAU,mCAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAIC,SAAS,GAAGD,GAAG,CAACE,IAAJ,CAASC,MAAzB;AACAR,MAAAA,OAAO,CAAC;AACJ;AACA;AACAC,QAAAA,MAAM,EAAE,CAACK,SAAS,CAAC,CAAD,CAAT,CAAaG,UAAb,CAAwBC,KAAzB,EAAgCJ,SAAS,CAAC,CAAD,CAAT,CAAaG,UAAb,CAAwBC,KAAxD,EAA+DJ,SAAS,CAAC,CAAD,CAAT,CAAaG,UAAb,CAAwBC,KAAvF,EAA8FJ,SAAS,CAAC,CAAD,CAAT,CAAaG,UAAb,CAAwBC,KAAtH,EAA6HJ,SAAS,CAAC,CAAD,CAAT,CAAaG,UAAb,CAAwBC,KAArJ,EAA4JJ,SAAS,CAAC,CAAD,CAAT,CAAaG,UAAb,CAAwBC,KAApL,CAHJ;AAIJR,QAAAA,MAAM,EAAE;AAJJ,OAAD,CAAP;AAMH,KATL,EAUKS,KAVL,CAUWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAZL;AAaH,GAdQ,EAcN,EAdM,CAAT;AAkBA,sBAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACKb,IAAI,CAACG,MAAL,KAAgB,IAAhB,GACGH,IAAI,CAACE,MAAL,CAAYc,GAAZ,CAAgB,CAACL,KAAD,EAAQM,KAAR,KAAkB;AAE9B,0BACI;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI;AAAA,sBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,GAAG,EAAEb,cAAV;AAA0B,YAAA,SAAS,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAA2BmB,KAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KAVD,CADH,gBAaK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdV;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsBH,CA/CD;;GAAMlB,K;;KAAAA,K;AAgDN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport lightsabersLit from './media/lightsabers-lit.png';\r\nimport './Components/Cards/Cards.css';\r\n\r\n\r\n\r\n\r\nconst Films = () => {\r\n\r\n    const [Data, setData] = useState({\r\n        Titles: [],\r\n        Loaded: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get('https://www.swapi.tech/api/films/')\r\n            .then(res => {\r\n                let swapiData = res.data.result;\r\n                setData({\r\n                    // Films: swapiData.forEach(element => { console.log(element.properties.title) }) \r\n                    //REFACTOR*****************************\r\n                    Titles: [swapiData[0].properties.title, swapiData[1].properties.title, swapiData[2].properties.title, swapiData[3].properties.title, swapiData[4].properties.title, swapiData[5].properties.title],\r\n                    Loaded: true\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"card-container\" >\r\n            {Data.Loaded === true ?\r\n                Data.Titles.map((title, index) => {\r\n\r\n                    return (\r\n                        <div>\r\n                            <div className=\"card\" key={index}>\r\n                                <h2>{title}</h2>\r\n                                <img src={lightsabersLit} className=\"lightsabersLit\" />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n\r\n                : <h1>Loading your movies...</h1>\r\n            }\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default Films;"]},"metadata":{},"sourceType":"module"}